/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/comments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          is_completed?: parameters["rowFilter.comments.is_completed"];
          author_id?: parameters["rowFilter.comments.author_id"];
          content?: parameters["rowFilter.comments.content"];
          project_id?: parameters["rowFilter.comments.project_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          is_completed?: parameters["rowFilter.comments.is_completed"];
          author_id?: parameters["rowFilter.comments.author_id"];
          content?: parameters["rowFilter.comments.content"];
          project_id?: parameters["rowFilter.comments.project_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          is_completed?: parameters["rowFilter.comments.is_completed"];
          author_id?: parameters["rowFilter.comments.author_id"];
          content?: parameters["rowFilter.comments.content"];
          project_id?: parameters["rowFilter.comments.project_id"];
        };
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/flyway_schema_history": {
    get: {
      parameters: {
        query: {
          installed_rank?: parameters["rowFilter.flyway_schema_history.installed_rank"];
          version?: parameters["rowFilter.flyway_schema_history.version"];
          description?: parameters["rowFilter.flyway_schema_history.description"];
          type?: parameters["rowFilter.flyway_schema_history.type"];
          script?: parameters["rowFilter.flyway_schema_history.script"];
          checksum?: parameters["rowFilter.flyway_schema_history.checksum"];
          installed_by?: parameters["rowFilter.flyway_schema_history.installed_by"];
          installed_on?: parameters["rowFilter.flyway_schema_history.installed_on"];
          execution_time?: parameters["rowFilter.flyway_schema_history.execution_time"];
          success?: parameters["rowFilter.flyway_schema_history.success"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["flyway_schema_history"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** flyway_schema_history */
          flyway_schema_history?: definitions["flyway_schema_history"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          installed_rank?: parameters["rowFilter.flyway_schema_history.installed_rank"];
          version?: parameters["rowFilter.flyway_schema_history.version"];
          description?: parameters["rowFilter.flyway_schema_history.description"];
          type?: parameters["rowFilter.flyway_schema_history.type"];
          script?: parameters["rowFilter.flyway_schema_history.script"];
          checksum?: parameters["rowFilter.flyway_schema_history.checksum"];
          installed_by?: parameters["rowFilter.flyway_schema_history.installed_by"];
          installed_on?: parameters["rowFilter.flyway_schema_history.installed_on"];
          execution_time?: parameters["rowFilter.flyway_schema_history.execution_time"];
          success?: parameters["rowFilter.flyway_schema_history.success"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          installed_rank?: parameters["rowFilter.flyway_schema_history.installed_rank"];
          version?: parameters["rowFilter.flyway_schema_history.version"];
          description?: parameters["rowFilter.flyway_schema_history.description"];
          type?: parameters["rowFilter.flyway_schema_history.type"];
          script?: parameters["rowFilter.flyway_schema_history.script"];
          checksum?: parameters["rowFilter.flyway_schema_history.checksum"];
          installed_by?: parameters["rowFilter.flyway_schema_history.installed_by"];
          installed_on?: parameters["rowFilter.flyway_schema_history.installed_on"];
          execution_time?: parameters["rowFilter.flyway_schema_history.execution_time"];
          success?: parameters["rowFilter.flyway_schema_history.success"];
        };
        body: {
          /** flyway_schema_history */
          flyway_schema_history?: definitions["flyway_schema_history"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/prices": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["prices"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** prices */
          prices?: definitions["prices"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
        };
        body: {
          /** prices */
          prices?: definitions["prices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/project_user": {
    get: {
      parameters: {
        query: {
          project_id?: parameters["rowFilter.project_user.project_id"];
          user_id?: parameters["rowFilter.project_user.user_id"];
          is_owner?: parameters["rowFilter.project_user.is_owner"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["project_user"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** project_user */
          project_user?: definitions["project_user"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          project_id?: parameters["rowFilter.project_user.project_id"];
          user_id?: parameters["rowFilter.project_user.user_id"];
          is_owner?: parameters["rowFilter.project_user.is_owner"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          project_id?: parameters["rowFilter.project_user.project_id"];
          user_id?: parameters["rowFilter.project_user.user_id"];
          is_owner?: parameters["rowFilter.project_user.is_owner"];
        };
        body: {
          /** project_user */
          project_user?: definitions["project_user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/projects": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          title?: parameters["rowFilter.projects.title"];
          pid?: parameters["rowFilter.projects.pid"];
          website_url?: parameters["rowFilter.projects.website_url"];
          invite_id?: parameters["rowFilter.projects.invite_id"];
          updated_at?: parameters["rowFilter.projects.updated_at"];
          created_at?: parameters["rowFilter.projects.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["projects"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** projects */
          projects?: definitions["projects"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          title?: parameters["rowFilter.projects.title"];
          pid?: parameters["rowFilter.projects.pid"];
          website_url?: parameters["rowFilter.projects.website_url"];
          invite_id?: parameters["rowFilter.projects.invite_id"];
          updated_at?: parameters["rowFilter.projects.updated_at"];
          created_at?: parameters["rowFilter.projects.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.projects.id"];
          title?: parameters["rowFilter.projects.title"];
          pid?: parameters["rowFilter.projects.pid"];
          website_url?: parameters["rowFilter.projects.website_url"];
          invite_id?: parameters["rowFilter.projects.invite_id"];
          updated_at?: parameters["rowFilter.projects.updated_at"];
          created_at?: parameters["rowFilter.projects.created_at"];
        };
        body: {
          /** projects */
          projects?: definitions["projects"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
        };
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/team_user": {
    get: {
      parameters: {
        query: {
          team_id?: parameters["rowFilter.team_user.team_id"];
          user_id?: parameters["rowFilter.team_user.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["team_user"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** team_user */
          team_user?: definitions["team_user"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          team_id?: parameters["rowFilter.team_user.team_id"];
          user_id?: parameters["rowFilter.team_user.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          team_id?: parameters["rowFilter.team_user.team_id"];
          user_id?: parameters["rowFilter.team_user.user_id"];
        };
        body: {
          /** team_user */
          team_user?: definitions["team_user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/teams": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
          photo_url?: parameters["rowFilter.teams.photo_url"];
          stripe_id?: parameters["rowFilter.teams.stripe_id"];
          current_billing_plan?: parameters["rowFilter.teams.current_billing_plan"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["teams"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** teams */
          teams?: definitions["teams"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
          photo_url?: parameters["rowFilter.teams.photo_url"];
          stripe_id?: parameters["rowFilter.teams.stripe_id"];
          current_billing_plan?: parameters["rowFilter.teams.current_billing_plan"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams.id"];
          name?: parameters["rowFilter.teams.name"];
          photo_url?: parameters["rowFilter.teams.photo_url"];
          stripe_id?: parameters["rowFilter.teams.stripe_id"];
          current_billing_plan?: parameters["rowFilter.teams.current_billing_plan"];
        };
        body: {
          /** teams */
          teams?: definitions["teams"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/teams_subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams_subscriptions.id"];
          team_id?: parameters["rowFilter.teams_subscriptions.team_id"];
          status?: parameters["rowFilter.teams_subscriptions.status"];
          metadata?: parameters["rowFilter.teams_subscriptions.metadata"];
          price_id?: parameters["rowFilter.teams_subscriptions.price_id"];
          quantity?: parameters["rowFilter.teams_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.teams_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.teams_subscriptions.created"];
          current_period_start?: parameters["rowFilter.teams_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.teams_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.teams_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.teams_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.teams_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.teams_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.teams_subscriptions.trial_end"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["teams_subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** teams_subscriptions */
          teams_subscriptions?: definitions["teams_subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams_subscriptions.id"];
          team_id?: parameters["rowFilter.teams_subscriptions.team_id"];
          status?: parameters["rowFilter.teams_subscriptions.status"];
          metadata?: parameters["rowFilter.teams_subscriptions.metadata"];
          price_id?: parameters["rowFilter.teams_subscriptions.price_id"];
          quantity?: parameters["rowFilter.teams_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.teams_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.teams_subscriptions.created"];
          current_period_start?: parameters["rowFilter.teams_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.teams_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.teams_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.teams_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.teams_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.teams_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.teams_subscriptions.trial_end"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.teams_subscriptions.id"];
          team_id?: parameters["rowFilter.teams_subscriptions.team_id"];
          status?: parameters["rowFilter.teams_subscriptions.status"];
          metadata?: parameters["rowFilter.teams_subscriptions.metadata"];
          price_id?: parameters["rowFilter.teams_subscriptions.price_id"];
          quantity?: parameters["rowFilter.teams_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.teams_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.teams_subscriptions.created"];
          current_period_start?: parameters["rowFilter.teams_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.teams_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.teams_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.teams_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.teams_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.teams_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.teams_subscriptions.trial_end"];
        };
        body: {
          /** teams_subscriptions */
          teams_subscriptions?: definitions["teams_subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          role?: parameters["rowFilter.users.role"];
          email?: parameters["rowFilter.users.email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          role?: parameters["rowFilter.users.role"];
          email?: parameters["rowFilter.users.email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          role?: parameters["rowFilter.users.role"];
          email?: parameters["rowFilter.users.email"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/handle_new_user": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  comments: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    is_completed?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    author_id: string;
    content: string;
    /**
     * Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project_id: number;
  };
  customers: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    stripe_customer_id?: string;
  };
  flyway_schema_history: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    installed_rank: number;
    version?: string;
    description: string;
    type: string;
    script: string;
    checksum?: number;
    installed_by: string;
    installed_on: string;
    execution_time: number;
    success: boolean;
  };
  prices: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `products.id`.<fk table='products' column='id'/>
     */
    product_id?: string;
    active?: boolean;
    description?: string;
    unit_amount?: number;
    currency?: string;
    type?: "one_time" | "recurring";
    interval?: "day" | "week" | "month" | "year";
    interval_count?: number;
    trial_period_days?: number;
    metadata?: string;
  };
  products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    active?: boolean;
    name?: string;
    description?: string;
    image?: string;
    metadata?: string;
  };
  project_user: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    project_id: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    is_owner?: boolean;
  };
  projects: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    title?: string;
    pid?: string;
    website_url: string;
    invite_id: string;
    updated_at: string;
    created_at: string;
  };
  subscriptions: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    user_id: string;
    status?:
      | "trialing"
      | "active"
      | "canceled"
      | "incomplete"
      | "incomplete_expired"
      | "past_due"
      | "unpaid";
    metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `prices.id`.<fk table='prices' column='id'/>
     */
    price_id?: string;
    quantity?: number;
    cancel_at_period_end?: boolean;
    created: string;
    current_period_start: string;
    current_period_end: string;
    ended_at?: string;
    cancel_at?: string;
    canceled_at?: string;
    trial_start?: string;
    trial_end?: string;
  };
  team_user: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `teams.id`.<fk table='teams' column='id'/>
     */
    team_id: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
  };
  teams: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    name: string;
    photo_url?: string;
    stripe_id?: string;
    current_billing_plan?: string;
  };
  teams_subscriptions: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `teams.id`.<fk table='teams' column='id'/>
     */
    team_id: number;
    status?:
      | "trialing"
      | "active"
      | "canceled"
      | "incomplete"
      | "incomplete_expired"
      | "past_due"
      | "unpaid";
    metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `prices.id`.<fk table='prices' column='id'/>
     */
    price_id?: string;
    quantity?: number;
    cancel_at_period_end?: boolean;
    created: string;
    current_period_start: string;
    current_period_end: string;
    ended_at?: string;
    cancel_at?: string;
    canceled_at?: string;
    trial_start?: string;
    trial_end?: string;
  };
  users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    full_name?: string;
    avatar_url?: string;
    billing_address?: string;
    payment_method?: string;
    role?: "team_member" | "team_admin" | "individual";
    email?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** comments */
  "body.comments": definitions["comments"];
  "rowFilter.comments.id": string;
  "rowFilter.comments.is_completed": string;
  "rowFilter.comments.author_id": string;
  "rowFilter.comments.content": string;
  "rowFilter.comments.project_id": string;
  /** customers */
  "body.customers": definitions["customers"];
  "rowFilter.customers.id": string;
  "rowFilter.customers.stripe_customer_id": string;
  /** flyway_schema_history */
  "body.flyway_schema_history": definitions["flyway_schema_history"];
  "rowFilter.flyway_schema_history.installed_rank": string;
  "rowFilter.flyway_schema_history.version": string;
  "rowFilter.flyway_schema_history.description": string;
  "rowFilter.flyway_schema_history.type": string;
  "rowFilter.flyway_schema_history.script": string;
  "rowFilter.flyway_schema_history.checksum": string;
  "rowFilter.flyway_schema_history.installed_by": string;
  "rowFilter.flyway_schema_history.installed_on": string;
  "rowFilter.flyway_schema_history.execution_time": string;
  "rowFilter.flyway_schema_history.success": string;
  /** prices */
  "body.prices": definitions["prices"];
  "rowFilter.prices.id": string;
  "rowFilter.prices.product_id": string;
  "rowFilter.prices.active": string;
  "rowFilter.prices.description": string;
  "rowFilter.prices.unit_amount": string;
  "rowFilter.prices.currency": string;
  "rowFilter.prices.type": string;
  "rowFilter.prices.interval": string;
  "rowFilter.prices.interval_count": string;
  "rowFilter.prices.trial_period_days": string;
  "rowFilter.prices.metadata": string;
  /** products */
  "body.products": definitions["products"];
  "rowFilter.products.id": string;
  "rowFilter.products.active": string;
  "rowFilter.products.name": string;
  "rowFilter.products.description": string;
  "rowFilter.products.image": string;
  "rowFilter.products.metadata": string;
  /** project_user */
  "body.project_user": definitions["project_user"];
  "rowFilter.project_user.project_id": string;
  "rowFilter.project_user.user_id": string;
  "rowFilter.project_user.is_owner": string;
  /** projects */
  "body.projects": definitions["projects"];
  "rowFilter.projects.id": string;
  "rowFilter.projects.title": string;
  "rowFilter.projects.pid": string;
  "rowFilter.projects.website_url": string;
  "rowFilter.projects.invite_id": string;
  "rowFilter.projects.updated_at": string;
  "rowFilter.projects.created_at": string;
  /** subscriptions */
  "body.subscriptions": definitions["subscriptions"];
  "rowFilter.subscriptions.id": string;
  "rowFilter.subscriptions.user_id": string;
  "rowFilter.subscriptions.status": string;
  "rowFilter.subscriptions.metadata": string;
  "rowFilter.subscriptions.price_id": string;
  "rowFilter.subscriptions.quantity": string;
  "rowFilter.subscriptions.cancel_at_period_end": string;
  "rowFilter.subscriptions.created": string;
  "rowFilter.subscriptions.current_period_start": string;
  "rowFilter.subscriptions.current_period_end": string;
  "rowFilter.subscriptions.ended_at": string;
  "rowFilter.subscriptions.cancel_at": string;
  "rowFilter.subscriptions.canceled_at": string;
  "rowFilter.subscriptions.trial_start": string;
  "rowFilter.subscriptions.trial_end": string;
  /** team_user */
  "body.team_user": definitions["team_user"];
  "rowFilter.team_user.team_id": string;
  "rowFilter.team_user.user_id": string;
  /** teams */
  "body.teams": definitions["teams"];
  "rowFilter.teams.id": string;
  "rowFilter.teams.name": string;
  "rowFilter.teams.photo_url": string;
  "rowFilter.teams.stripe_id": string;
  "rowFilter.teams.current_billing_plan": string;
  /** teams_subscriptions */
  "body.teams_subscriptions": definitions["teams_subscriptions"];
  "rowFilter.teams_subscriptions.id": string;
  "rowFilter.teams_subscriptions.team_id": string;
  "rowFilter.teams_subscriptions.status": string;
  "rowFilter.teams_subscriptions.metadata": string;
  "rowFilter.teams_subscriptions.price_id": string;
  "rowFilter.teams_subscriptions.quantity": string;
  "rowFilter.teams_subscriptions.cancel_at_period_end": string;
  "rowFilter.teams_subscriptions.created": string;
  "rowFilter.teams_subscriptions.current_period_start": string;
  "rowFilter.teams_subscriptions.current_period_end": string;
  "rowFilter.teams_subscriptions.ended_at": string;
  "rowFilter.teams_subscriptions.cancel_at": string;
  "rowFilter.teams_subscriptions.canceled_at": string;
  "rowFilter.teams_subscriptions.trial_start": string;
  "rowFilter.teams_subscriptions.trial_end": string;
  /** users */
  "body.users": definitions["users"];
  "rowFilter.users.id": string;
  "rowFilter.users.full_name": string;
  "rowFilter.users.avatar_url": string;
  "rowFilter.users.billing_address": string;
  "rowFilter.users.payment_method": string;
  "rowFilter.users.role": string;
  "rowFilter.users.email": string;
}

export interface operations {}

export interface external {}
