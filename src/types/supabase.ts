/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  readonly '/': {
    readonly get: {
      readonly responses: {
        /** OK */
        readonly 200: unknown;
      };
    };
  };
  readonly '/comments': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.comments.id'];
          readonly is_completed?: parameters['rowFilter.comments.is_completed'];
          readonly author_id?: parameters['rowFilter.comments.author_id'];
          readonly content?: parameters['rowFilter.comments.content'];
          readonly project_id?: parameters['rowFilter.comments.project_id'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['comments'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** comments */
          readonly comments?: definitions['comments'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.comments.id'];
          readonly is_completed?: parameters['rowFilter.comments.is_completed'];
          readonly author_id?: parameters['rowFilter.comments.author_id'];
          readonly content?: parameters['rowFilter.comments.content'];
          readonly project_id?: parameters['rowFilter.comments.project_id'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.comments.id'];
          readonly is_completed?: parameters['rowFilter.comments.is_completed'];
          readonly author_id?: parameters['rowFilter.comments.author_id'];
          readonly content?: parameters['rowFilter.comments.content'];
          readonly project_id?: parameters['rowFilter.comments.project_id'];
        };
        readonly body: {
          /** comments */
          readonly comments?: definitions['comments'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/customers': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.customers.id'];
          readonly stripe_customer_id?: parameters['rowFilter.customers.stripe_customer_id'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['customers'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** customers */
          readonly customers?: definitions['customers'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.customers.id'];
          readonly stripe_customer_id?: parameters['rowFilter.customers.stripe_customer_id'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.customers.id'];
          readonly stripe_customer_id?: parameters['rowFilter.customers.stripe_customer_id'];
        };
        readonly body: {
          /** customers */
          readonly customers?: definitions['customers'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/flyway_schema_history': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly installed_rank?: parameters['rowFilter.flyway_schema_history.installed_rank'];
          readonly version?: parameters['rowFilter.flyway_schema_history.version'];
          readonly description?: parameters['rowFilter.flyway_schema_history.description'];
          readonly type?: parameters['rowFilter.flyway_schema_history.type'];
          readonly script?: parameters['rowFilter.flyway_schema_history.script'];
          readonly checksum?: parameters['rowFilter.flyway_schema_history.checksum'];
          readonly installed_by?: parameters['rowFilter.flyway_schema_history.installed_by'];
          readonly installed_on?: parameters['rowFilter.flyway_schema_history.installed_on'];
          readonly execution_time?: parameters['rowFilter.flyway_schema_history.execution_time'];
          readonly success?: parameters['rowFilter.flyway_schema_history.success'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['flyway_schema_history'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** flyway_schema_history */
          readonly flyway_schema_history?: definitions['flyway_schema_history'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly installed_rank?: parameters['rowFilter.flyway_schema_history.installed_rank'];
          readonly version?: parameters['rowFilter.flyway_schema_history.version'];
          readonly description?: parameters['rowFilter.flyway_schema_history.description'];
          readonly type?: parameters['rowFilter.flyway_schema_history.type'];
          readonly script?: parameters['rowFilter.flyway_schema_history.script'];
          readonly checksum?: parameters['rowFilter.flyway_schema_history.checksum'];
          readonly installed_by?: parameters['rowFilter.flyway_schema_history.installed_by'];
          readonly installed_on?: parameters['rowFilter.flyway_schema_history.installed_on'];
          readonly execution_time?: parameters['rowFilter.flyway_schema_history.execution_time'];
          readonly success?: parameters['rowFilter.flyway_schema_history.success'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly installed_rank?: parameters['rowFilter.flyway_schema_history.installed_rank'];
          readonly version?: parameters['rowFilter.flyway_schema_history.version'];
          readonly description?: parameters['rowFilter.flyway_schema_history.description'];
          readonly type?: parameters['rowFilter.flyway_schema_history.type'];
          readonly script?: parameters['rowFilter.flyway_schema_history.script'];
          readonly checksum?: parameters['rowFilter.flyway_schema_history.checksum'];
          readonly installed_by?: parameters['rowFilter.flyway_schema_history.installed_by'];
          readonly installed_on?: parameters['rowFilter.flyway_schema_history.installed_on'];
          readonly execution_time?: parameters['rowFilter.flyway_schema_history.execution_time'];
          readonly success?: parameters['rowFilter.flyway_schema_history.success'];
        };
        readonly body: {
          /** flyway_schema_history */
          readonly flyway_schema_history?: definitions['flyway_schema_history'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/prices': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.prices.id'];
          readonly product_id?: parameters['rowFilter.prices.product_id'];
          readonly active?: parameters['rowFilter.prices.active'];
          readonly description?: parameters['rowFilter.prices.description'];
          readonly unit_amount?: parameters['rowFilter.prices.unit_amount'];
          readonly currency?: parameters['rowFilter.prices.currency'];
          readonly type?: parameters['rowFilter.prices.type'];
          readonly interval?: parameters['rowFilter.prices.interval'];
          readonly interval_count?: parameters['rowFilter.prices.interval_count'];
          readonly trial_period_days?: parameters['rowFilter.prices.trial_period_days'];
          readonly metadata?: parameters['rowFilter.prices.metadata'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['prices'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** prices */
          readonly prices?: definitions['prices'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.prices.id'];
          readonly product_id?: parameters['rowFilter.prices.product_id'];
          readonly active?: parameters['rowFilter.prices.active'];
          readonly description?: parameters['rowFilter.prices.description'];
          readonly unit_amount?: parameters['rowFilter.prices.unit_amount'];
          readonly currency?: parameters['rowFilter.prices.currency'];
          readonly type?: parameters['rowFilter.prices.type'];
          readonly interval?: parameters['rowFilter.prices.interval'];
          readonly interval_count?: parameters['rowFilter.prices.interval_count'];
          readonly trial_period_days?: parameters['rowFilter.prices.trial_period_days'];
          readonly metadata?: parameters['rowFilter.prices.metadata'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.prices.id'];
          readonly product_id?: parameters['rowFilter.prices.product_id'];
          readonly active?: parameters['rowFilter.prices.active'];
          readonly description?: parameters['rowFilter.prices.description'];
          readonly unit_amount?: parameters['rowFilter.prices.unit_amount'];
          readonly currency?: parameters['rowFilter.prices.currency'];
          readonly type?: parameters['rowFilter.prices.type'];
          readonly interval?: parameters['rowFilter.prices.interval'];
          readonly interval_count?: parameters['rowFilter.prices.interval_count'];
          readonly trial_period_days?: parameters['rowFilter.prices.trial_period_days'];
          readonly metadata?: parameters['rowFilter.prices.metadata'];
        };
        readonly body: {
          /** prices */
          readonly prices?: definitions['prices'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/products': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.products.id'];
          readonly active?: parameters['rowFilter.products.active'];
          readonly name?: parameters['rowFilter.products.name'];
          readonly description?: parameters['rowFilter.products.description'];
          readonly image?: parameters['rowFilter.products.image'];
          readonly metadata?: parameters['rowFilter.products.metadata'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['products'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** products */
          readonly products?: definitions['products'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.products.id'];
          readonly active?: parameters['rowFilter.products.active'];
          readonly name?: parameters['rowFilter.products.name'];
          readonly description?: parameters['rowFilter.products.description'];
          readonly image?: parameters['rowFilter.products.image'];
          readonly metadata?: parameters['rowFilter.products.metadata'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.products.id'];
          readonly active?: parameters['rowFilter.products.active'];
          readonly name?: parameters['rowFilter.products.name'];
          readonly description?: parameters['rowFilter.products.description'];
          readonly image?: parameters['rowFilter.products.image'];
          readonly metadata?: parameters['rowFilter.products.metadata'];
        };
        readonly body: {
          /** products */
          readonly products?: definitions['products'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/project_user': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly project_id?: parameters['rowFilter.project_user.project_id'];
          readonly user_id?: parameters['rowFilter.project_user.user_id'];
          readonly is_owner?: parameters['rowFilter.project_user.is_owner'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['project_user'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** project_user */
          readonly project_user?: definitions['project_user'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly project_id?: parameters['rowFilter.project_user.project_id'];
          readonly user_id?: parameters['rowFilter.project_user.user_id'];
          readonly is_owner?: parameters['rowFilter.project_user.is_owner'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly project_id?: parameters['rowFilter.project_user.project_id'];
          readonly user_id?: parameters['rowFilter.project_user.user_id'];
          readonly is_owner?: parameters['rowFilter.project_user.is_owner'];
        };
        readonly body: {
          /** project_user */
          readonly project_user?: definitions['project_user'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/projects': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.projects.id'];
          readonly title?: parameters['rowFilter.projects.title'];
          readonly pid?: parameters['rowFilter.projects.pid'];
          readonly website_url?: parameters['rowFilter.projects.website_url'];
          readonly invite_id?: parameters['rowFilter.projects.invite_id'];
          readonly updated_at?: parameters['rowFilter.projects.updated_at'];
          readonly created_at?: parameters['rowFilter.projects.created_at'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['projects'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** projects */
          readonly projects?: definitions['projects'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.projects.id'];
          readonly title?: parameters['rowFilter.projects.title'];
          readonly pid?: parameters['rowFilter.projects.pid'];
          readonly website_url?: parameters['rowFilter.projects.website_url'];
          readonly invite_id?: parameters['rowFilter.projects.invite_id'];
          readonly updated_at?: parameters['rowFilter.projects.updated_at'];
          readonly created_at?: parameters['rowFilter.projects.created_at'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.projects.id'];
          readonly title?: parameters['rowFilter.projects.title'];
          readonly pid?: parameters['rowFilter.projects.pid'];
          readonly website_url?: parameters['rowFilter.projects.website_url'];
          readonly invite_id?: parameters['rowFilter.projects.invite_id'];
          readonly updated_at?: parameters['rowFilter.projects.updated_at'];
          readonly created_at?: parameters['rowFilter.projects.created_at'];
        };
        readonly body: {
          /** projects */
          readonly projects?: definitions['projects'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/subscriptions': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.subscriptions.id'];
          readonly user_id?: parameters['rowFilter.subscriptions.user_id'];
          readonly status?: parameters['rowFilter.subscriptions.status'];
          readonly metadata?: parameters['rowFilter.subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.subscriptions.trial_end'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['subscriptions'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** subscriptions */
          readonly subscriptions?: definitions['subscriptions'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.subscriptions.id'];
          readonly user_id?: parameters['rowFilter.subscriptions.user_id'];
          readonly status?: parameters['rowFilter.subscriptions.status'];
          readonly metadata?: parameters['rowFilter.subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.subscriptions.trial_end'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.subscriptions.id'];
          readonly user_id?: parameters['rowFilter.subscriptions.user_id'];
          readonly status?: parameters['rowFilter.subscriptions.status'];
          readonly metadata?: parameters['rowFilter.subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.subscriptions.trial_end'];
        };
        readonly body: {
          /** subscriptions */
          readonly subscriptions?: definitions['subscriptions'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/team_user': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly team_id?: parameters['rowFilter.team_user.team_id'];
          readonly user_id?: parameters['rowFilter.team_user.user_id'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['team_user'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** team_user */
          readonly team_user?: definitions['team_user'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly team_id?: parameters['rowFilter.team_user.team_id'];
          readonly user_id?: parameters['rowFilter.team_user.user_id'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly team_id?: parameters['rowFilter.team_user.team_id'];
          readonly user_id?: parameters['rowFilter.team_user.user_id'];
        };
        readonly body: {
          /** team_user */
          readonly team_user?: definitions['team_user'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/teams': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams.id'];
          readonly name?: parameters['rowFilter.teams.name'];
          readonly photo_url?: parameters['rowFilter.teams.photo_url'];
          readonly stripe_id?: parameters['rowFilter.teams.stripe_id'];
          readonly current_billing_plan?: parameters['rowFilter.teams.current_billing_plan'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['teams'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** teams */
          readonly teams?: definitions['teams'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams.id'];
          readonly name?: parameters['rowFilter.teams.name'];
          readonly photo_url?: parameters['rowFilter.teams.photo_url'];
          readonly stripe_id?: parameters['rowFilter.teams.stripe_id'];
          readonly current_billing_plan?: parameters['rowFilter.teams.current_billing_plan'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams.id'];
          readonly name?: parameters['rowFilter.teams.name'];
          readonly photo_url?: parameters['rowFilter.teams.photo_url'];
          readonly stripe_id?: parameters['rowFilter.teams.stripe_id'];
          readonly current_billing_plan?: parameters['rowFilter.teams.current_billing_plan'];
        };
        readonly body: {
          /** teams */
          readonly teams?: definitions['teams'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/teams_subscriptions': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams_subscriptions.id'];
          readonly team_id?: parameters['rowFilter.teams_subscriptions.team_id'];
          readonly status?: parameters['rowFilter.teams_subscriptions.status'];
          readonly metadata?: parameters['rowFilter.teams_subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.teams_subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.teams_subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.teams_subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.teams_subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.teams_subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.teams_subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.teams_subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.teams_subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.teams_subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.teams_subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.teams_subscriptions.trial_end'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['teams_subscriptions'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** teams_subscriptions */
          readonly teams_subscriptions?: definitions['teams_subscriptions'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams_subscriptions.id'];
          readonly team_id?: parameters['rowFilter.teams_subscriptions.team_id'];
          readonly status?: parameters['rowFilter.teams_subscriptions.status'];
          readonly metadata?: parameters['rowFilter.teams_subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.teams_subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.teams_subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.teams_subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.teams_subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.teams_subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.teams_subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.teams_subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.teams_subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.teams_subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.teams_subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.teams_subscriptions.trial_end'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.teams_subscriptions.id'];
          readonly team_id?: parameters['rowFilter.teams_subscriptions.team_id'];
          readonly status?: parameters['rowFilter.teams_subscriptions.status'];
          readonly metadata?: parameters['rowFilter.teams_subscriptions.metadata'];
          readonly price_id?: parameters['rowFilter.teams_subscriptions.price_id'];
          readonly quantity?: parameters['rowFilter.teams_subscriptions.quantity'];
          readonly cancel_at_period_end?: parameters['rowFilter.teams_subscriptions.cancel_at_period_end'];
          readonly created?: parameters['rowFilter.teams_subscriptions.created'];
          readonly current_period_start?: parameters['rowFilter.teams_subscriptions.current_period_start'];
          readonly current_period_end?: parameters['rowFilter.teams_subscriptions.current_period_end'];
          readonly ended_at?: parameters['rowFilter.teams_subscriptions.ended_at'];
          readonly cancel_at?: parameters['rowFilter.teams_subscriptions.cancel_at'];
          readonly canceled_at?: parameters['rowFilter.teams_subscriptions.canceled_at'];
          readonly trial_start?: parameters['rowFilter.teams_subscriptions.trial_start'];
          readonly trial_end?: parameters['rowFilter.teams_subscriptions.trial_end'];
        };
        readonly body: {
          /** teams_subscriptions */
          readonly teams_subscriptions?: definitions['teams_subscriptions'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/users': {
    readonly get: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.users.id'];
          readonly full_name?: parameters['rowFilter.users.full_name'];
          readonly avatar_url?: parameters['rowFilter.users.avatar_url'];
          readonly billing_address?: parameters['rowFilter.users.billing_address'];
          readonly payment_method?: parameters['rowFilter.users.payment_method'];
          readonly role?: parameters['rowFilter.users.role'];
          readonly email?: parameters['rowFilter.users.email'];
          /** Filtering Columns */
          readonly select?: parameters['select'];
          /** Ordering */
          readonly order?: parameters['order'];
          /** Limiting and Pagination */
          readonly offset?: parameters['offset'];
          /** Limiting and Pagination */
          readonly limit?: parameters['limit'];
        };
        readonly header: {
          /** Limiting and Pagination */
          readonly Range?: parameters['range'];
          /** Limiting and Pagination */
          readonly 'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          readonly Prefer?: parameters['preferCount'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: {
          readonly schema: readonly definitions['users'][];
        };
        /** Partial Content */
        readonly 206: unknown;
      };
    };
    readonly post: {
      readonly parameters: {
        readonly body: {
          /** users */
          readonly users?: definitions['users'];
        };
        readonly query: {
          /** Filtering Columns */
          readonly select?: parameters['select'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** Created */
        readonly 201: unknown;
      };
    };
    readonly delete: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.users.id'];
          readonly full_name?: parameters['rowFilter.users.full_name'];
          readonly avatar_url?: parameters['rowFilter.users.avatar_url'];
          readonly billing_address?: parameters['rowFilter.users.billing_address'];
          readonly payment_method?: parameters['rowFilter.users.payment_method'];
          readonly role?: parameters['rowFilter.users.role'];
          readonly email?: parameters['rowFilter.users.email'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
    readonly patch: {
      readonly parameters: {
        readonly query: {
          readonly id?: parameters['rowFilter.users.id'];
          readonly full_name?: parameters['rowFilter.users.full_name'];
          readonly avatar_url?: parameters['rowFilter.users.avatar_url'];
          readonly billing_address?: parameters['rowFilter.users.billing_address'];
          readonly payment_method?: parameters['rowFilter.users.payment_method'];
          readonly role?: parameters['rowFilter.users.role'];
          readonly email?: parameters['rowFilter.users.email'];
        };
        readonly body: {
          /** users */
          readonly users?: definitions['users'];
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferReturn'];
        };
      };
      readonly responses: {
        /** No Content */
        readonly 204: never;
      };
    };
  };
  readonly '/rpc/handle_new_user': {
    readonly post: {
      readonly parameters: {
        readonly body: {
          readonly args: { readonly [key: string]: unknown };
        };
        readonly header: {
          /** Preference */
          readonly Prefer?: parameters['preferParams'];
        };
      };
      readonly responses: {
        /** OK */
        readonly 200: unknown;
      };
    };
  };
};

export type definitions = {
  readonly comments: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: number;
    readonly is_completed?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    readonly author_id: string;
    readonly content: string;
    /**
     * Note:
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    readonly project_id: number;
  };
  readonly customers: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    readonly stripe_customer_id?: string;
  };
  readonly flyway_schema_history: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly installed_rank: number;
    readonly version?: string;
    readonly description: string;
    readonly type: string;
    readonly script: string;
    readonly checksum?: number;
    readonly installed_by: string;
    readonly installed_on: string;
    readonly execution_time: number;
    readonly success: boolean;
  };
  readonly prices: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    /**
     * Note:
     * This is a Foreign Key to `products.id`.<fk table='products' column='id'/>
     */
    readonly product_id?: string;
    readonly active?: boolean;
    readonly description?: string;
    readonly unit_amount?: number;
    readonly currency?: string;
    readonly type?: 'one_time' | 'recurring';
    readonly interval?: 'day' | 'week' | 'month' | 'year';
    readonly interval_count?: number;
    readonly trial_period_days?: number;
    readonly metadata?: string;
  };
  readonly products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    readonly active?: boolean;
    readonly name?: string;
    readonly description?: string;
    readonly image?: string;
    readonly metadata?: string;
  };
  readonly project_user: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
     */
    readonly project_id: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    readonly user_id: string;
    readonly is_owner?: boolean;
  };
  readonly projects: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: number;
    readonly title?: string;
    readonly pid?: string;
    readonly website_url: string;
    readonly invite_id: string;
    readonly updated_at: string;
    readonly created_at: string;
  };
  readonly subscriptions: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    readonly user_id: string;
    readonly status?:
      | 'trialing'
      | 'active'
      | 'canceled'
      | 'incomplete'
      | 'incomplete_expired'
      | 'past_due'
      | 'unpaid';
    readonly metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `prices.id`.<fk table='prices' column='id'/>
     */
    readonly price_id?: string;
    readonly quantity?: number;
    readonly cancel_at_period_end?: boolean;
    readonly created: string;
    readonly current_period_start: string;
    readonly current_period_end: string;
    readonly ended_at?: string;
    readonly cancel_at?: string;
    readonly canceled_at?: string;
    readonly trial_start?: string;
    readonly trial_end?: string;
  };
  readonly team_user: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `teams.id`.<fk table='teams' column='id'/>
     */
    readonly team_id: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    readonly user_id: string;
  };
  readonly teams: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: number;
    readonly name: string;
    readonly photo_url?: string;
    readonly stripe_id?: string;
    readonly current_billing_plan?: string;
  };
  readonly teams_subscriptions: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    /**
     * Note:
     * This is a Foreign Key to `teams.id`.<fk table='teams' column='id'/>
     */
    readonly team_id: number;
    readonly status?:
      | 'trialing'
      | 'active'
      | 'canceled'
      | 'incomplete'
      | 'incomplete_expired'
      | 'past_due'
      | 'unpaid';
    readonly metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `prices.id`.<fk table='prices' column='id'/>
     */
    readonly price_id?: string;
    readonly quantity?: number;
    readonly cancel_at_period_end?: boolean;
    readonly created: string;
    readonly current_period_start: string;
    readonly current_period_end: string;
    readonly ended_at?: string;
    readonly cancel_at?: string;
    readonly canceled_at?: string;
    readonly trial_start?: string;
    readonly trial_end?: string;
  };
  readonly users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    readonly id: string;
    readonly full_name?: string;
    readonly avatar_url?: string;
    readonly billing_address?: string;
    readonly payment_method?: string;
    readonly role?: 'team_member' | 'team_admin' | 'individual';
    readonly email?: string;
  };
};

export type parameters = {
  /** Preference */
  readonly preferParams: 'params=single-object';
  /** Preference */
  readonly preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /** Preference */
  readonly preferCount: 'count=none';
  /** Filtering Columns */
  readonly select: string;
  /** On Conflict */
  readonly on_conflict: string;
  /** Ordering */
  readonly order: string;
  /** Limiting and Pagination */
  readonly range: string;
  /** Limiting and Pagination */
  readonly rangeUnit: string;
  /** Limiting and Pagination */
  readonly offset: string;
  /** Limiting and Pagination */
  readonly limit: string;
  /** comments */
  readonly 'body.comments': definitions['comments'];
  readonly 'rowFilter.comments.id': string;
  readonly 'rowFilter.comments.is_completed': string;
  readonly 'rowFilter.comments.author_id': string;
  readonly 'rowFilter.comments.content': string;
  readonly 'rowFilter.comments.project_id': string;
  /** customers */
  readonly 'body.customers': definitions['customers'];
  readonly 'rowFilter.customers.id': string;
  readonly 'rowFilter.customers.stripe_customer_id': string;
  /** flyway_schema_history */
  readonly 'body.flyway_schema_history': definitions['flyway_schema_history'];
  readonly 'rowFilter.flyway_schema_history.installed_rank': string;
  readonly 'rowFilter.flyway_schema_history.version': string;
  readonly 'rowFilter.flyway_schema_history.description': string;
  readonly 'rowFilter.flyway_schema_history.type': string;
  readonly 'rowFilter.flyway_schema_history.script': string;
  readonly 'rowFilter.flyway_schema_history.checksum': string;
  readonly 'rowFilter.flyway_schema_history.installed_by': string;
  readonly 'rowFilter.flyway_schema_history.installed_on': string;
  readonly 'rowFilter.flyway_schema_history.execution_time': string;
  readonly 'rowFilter.flyway_schema_history.success': string;
  /** prices */
  readonly 'body.prices': definitions['prices'];
  readonly 'rowFilter.prices.id': string;
  readonly 'rowFilter.prices.product_id': string;
  readonly 'rowFilter.prices.active': string;
  readonly 'rowFilter.prices.description': string;
  readonly 'rowFilter.prices.unit_amount': string;
  readonly 'rowFilter.prices.currency': string;
  readonly 'rowFilter.prices.type': string;
  readonly 'rowFilter.prices.interval': string;
  readonly 'rowFilter.prices.interval_count': string;
  readonly 'rowFilter.prices.trial_period_days': string;
  readonly 'rowFilter.prices.metadata': string;
  /** products */
  readonly 'body.products': definitions['products'];
  readonly 'rowFilter.products.id': string;
  readonly 'rowFilter.products.active': string;
  readonly 'rowFilter.products.name': string;
  readonly 'rowFilter.products.description': string;
  readonly 'rowFilter.products.image': string;
  readonly 'rowFilter.products.metadata': string;
  /** project_user */
  readonly 'body.project_user': definitions['project_user'];
  readonly 'rowFilter.project_user.project_id': string;
  readonly 'rowFilter.project_user.user_id': string;
  readonly 'rowFilter.project_user.is_owner': string;
  /** projects */
  readonly 'body.projects': definitions['projects'];
  readonly 'rowFilter.projects.id': string;
  readonly 'rowFilter.projects.title': string;
  readonly 'rowFilter.projects.pid': string;
  readonly 'rowFilter.projects.website_url': string;
  readonly 'rowFilter.projects.invite_id': string;
  readonly 'rowFilter.projects.updated_at': string;
  readonly 'rowFilter.projects.created_at': string;
  /** subscriptions */
  readonly 'body.subscriptions': definitions['subscriptions'];
  readonly 'rowFilter.subscriptions.id': string;
  readonly 'rowFilter.subscriptions.user_id': string;
  readonly 'rowFilter.subscriptions.status': string;
  readonly 'rowFilter.subscriptions.metadata': string;
  readonly 'rowFilter.subscriptions.price_id': string;
  readonly 'rowFilter.subscriptions.quantity': string;
  readonly 'rowFilter.subscriptions.cancel_at_period_end': string;
  readonly 'rowFilter.subscriptions.created': string;
  readonly 'rowFilter.subscriptions.current_period_start': string;
  readonly 'rowFilter.subscriptions.current_period_end': string;
  readonly 'rowFilter.subscriptions.ended_at': string;
  readonly 'rowFilter.subscriptions.cancel_at': string;
  readonly 'rowFilter.subscriptions.canceled_at': string;
  readonly 'rowFilter.subscriptions.trial_start': string;
  readonly 'rowFilter.subscriptions.trial_end': string;
  /** team_user */
  readonly 'body.team_user': definitions['team_user'];
  readonly 'rowFilter.team_user.team_id': string;
  readonly 'rowFilter.team_user.user_id': string;
  /** teams */
  readonly 'body.teams': definitions['teams'];
  readonly 'rowFilter.teams.id': string;
  readonly 'rowFilter.teams.name': string;
  readonly 'rowFilter.teams.photo_url': string;
  readonly 'rowFilter.teams.stripe_id': string;
  readonly 'rowFilter.teams.current_billing_plan': string;
  /** teams_subscriptions */
  readonly 'body.teams_subscriptions': definitions['teams_subscriptions'];
  readonly 'rowFilter.teams_subscriptions.id': string;
  readonly 'rowFilter.teams_subscriptions.team_id': string;
  readonly 'rowFilter.teams_subscriptions.status': string;
  readonly 'rowFilter.teams_subscriptions.metadata': string;
  readonly 'rowFilter.teams_subscriptions.price_id': string;
  readonly 'rowFilter.teams_subscriptions.quantity': string;
  readonly 'rowFilter.teams_subscriptions.cancel_at_period_end': string;
  readonly 'rowFilter.teams_subscriptions.created': string;
  readonly 'rowFilter.teams_subscriptions.current_period_start': string;
  readonly 'rowFilter.teams_subscriptions.current_period_end': string;
  readonly 'rowFilter.teams_subscriptions.ended_at': string;
  readonly 'rowFilter.teams_subscriptions.cancel_at': string;
  readonly 'rowFilter.teams_subscriptions.canceled_at': string;
  readonly 'rowFilter.teams_subscriptions.trial_start': string;
  readonly 'rowFilter.teams_subscriptions.trial_end': string;
  /** users */
  readonly 'body.users': definitions['users'];
  readonly 'rowFilter.users.id': string;
  readonly 'rowFilter.users.full_name': string;
  readonly 'rowFilter.users.avatar_url': string;
  readonly 'rowFilter.users.billing_address': string;
  readonly 'rowFilter.users.payment_method': string;
  readonly 'rowFilter.users.role': string;
  readonly 'rowFilter.users.email': string;
};

// eslint-disable-next-line @typescript-eslint/ban-types
export type operations = {};

// eslint-disable-next-line @typescript-eslint/ban-types
export type external = {};
